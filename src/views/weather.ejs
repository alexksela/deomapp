<%- include('_head.ejs') %>

<div class="card text-white bg-secondary">
  <div class="card-header bg-info h3">
    <i class="fa fa-globe"></i>&nbsp; Geolocated Weather <span id="location"></span>
  </div>
  <div class="card-body">
    <div class="alert alert-warning fade" role="alert" id="error" style="color: #222"></div>
    <table>
      <tr>
        <td><img src="" id="icon" /></td>
        <td class="weather-info">
          <ul id="weather-list"></ul>
        </td>
      </tr>
    </table>
  </div>
</div>

<div style="padding: 1rem">
  <img src="images/open-weather.png" height="64px" />
</div>

<template id="weather-template"> </template>

<script>
  const errElement = document.getElementById('error')

  // Try to geolocate the user and call getWeather with result
  if (navigator.geolocation) {
    errElement.classList.add('hide')
    // Note getWeather is the callback which is passed a coords object
    navigator.geolocation.getCurrentPosition(getWeather, (err) => {
      let errMessage = err.message
      // API only allowed on localhost and HTTPS domains
      if (err.message.startsWith('Only secure origins are allowed')) {
        errMessage = 'getCurrentPosition API only works on secure (HTTPS) domains'
      }
      errElement.classList.add('show')
      errElement.textContent = errMessage + '. Will fall back to showing weather for London'

      getWeather({ coords: { latitude: 51.40329, longitude: 0.05619 } })
    })
  } else {
    // Handle older browsers without geolocation API
    errElement.classList.add('show')
    errElement.textContent = "Geolocation is not supported by this browser. Maybe it's time to upgrade!"

    getWeather({ coords: { latitude: 51.40329, longitude: 0.05619 } })
    console.err('Geolocation is not supported by this browser.')
  }

  // Call our weather API with the given position
  async function getWeather(pos) {
    let lat = pos.coords.latitude
    let long = pos.coords.longitude
    try {
      const resp = await fetch(`/api/weather/${lat}/${long}`)
      if (!resp.ok) throw `Fetch /api/weather/${lat}/${long} failed with ${resp.statusText}`
      const data = await resp.json()

      const icon = data.weather[0].icon.replace('n', 'd')
      document.getElementById('icon').src = `images/weather/${icon}.png`
      document.getElementById('location').textContent = ` - ${data.name}`
      addWeatherDetails(`The weather currently is: &nbsp; ${data.weather[0].description}`)
      addWeatherDetails(`Current temperature: &nbsp; ${data.main.temp}°C`)
      addWeatherDetails(`Temperature feels like: &nbsp; ${data.main.feels_like}°C`)
      addWeatherDetails(`Cloud cover: &nbsp; ${data.clouds.all}%`)
      addWeatherDetails(`Volume of rain in last hour: &nbsp; ${data.rain ? data.rain['1h'] : 0}mm`)
      addWeatherDetails(`Wind speed: &nbsp; ${(data.wind.speed * 2.24).toFixed(1)} mph`)
    } catch (err) {
      errElement.classList.add('show')
      errElement.textContent = err
    }
  }

  function addWeatherDetails(details) {
    const weatherList = document.getElementById('weather-list')
    const li = document.createElement('li')
    li.innerHTML = details
    weatherList.appendChild(li)
  }
</script>

<%- include('_foot.ejs') %>
